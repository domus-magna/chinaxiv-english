# Cloud-native batch translation worker with QA filtering
name: Batch Translation Worker

on:
  workflow_dispatch:
    inputs:
      batch_size:
        description: 'Papers per batch'
        required: false
        default: '500'
      workers:
        description: 'Parallel translation workers'
        required: false
        default: '80'
      runner_type:
        description: 'Runner type (ubuntu-latest, ubuntu-latest-4-cores, ubuntu-latest-8-cores)'
        required: false
        default: 'ubuntu-latest-8-cores'

jobs:
  translate:
    runs-on: ${{ github.event.inputs.runner_type || 'ubuntu-latest-8-cores' }}
    timeout-minutes: 360  # 6 hours max
    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: true

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install system packages
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends \
            tesseract-ocr \
            tesseract-ocr-chi-sim \
            tesseract-ocr-chi-tra \
            ghostscript \
            pngquant \
            qpdf \
            unpaper

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Validate API key
        env:
          OPENROUTER_API_KEY: ${{ secrets.OPENROUTER_API_KEY }}
        run: |
          set -e
          echo "üîé Running preflight..."
          python -m src.tools.env_diagnose --preflight || {
            echo "‚ùå Preflight failed"
            exit 1
          }

      - name: Pull latest cloud_jobs.json
        run: |
          set -e
          echo "üì• Pulling latest queue state..."
          git pull origin main --rebase || {
            echo "‚ö†Ô∏è Pull failed, continuing with local state"
          }

      - name: Run batch translation with QA
        env:
          OPENROUTER_API_KEY: ${{ secrets.OPENROUTER_API_KEY }}
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
        run: |
          set -e

          BATCH_SIZE="${{ github.event.inputs.batch_size || '500' }}"
          WORKERS="${{ github.event.inputs.workers || '80' }}"
          WORKER_ID="gh-${{ github.run_id }}-${{ github.run_attempt }}"

          echo "üöÄ Starting batch translation..."
          echo "  Batch size: $BATCH_SIZE"
          echo "  Workers: $WORKERS"
          echo "  Worker ID: $WORKER_ID"
          echo "  Runner: ${{ github.event.inputs.runner_type || 'ubuntu-latest-8-cores' }}"

          python -m src.pipeline \
            --cloud-mode \
            --with-qa \
            --batch-size "$BATCH_SIZE" \
            --workers "$WORKERS" \
            --worker-id "$WORKER_ID" \
            --skip-selection || {
            echo "‚ö†Ô∏è Translation batch completed with errors"
            exit 1
          }

          echo "‚úÖ Batch translation complete"

      - name: Show QA statistics
        if: always()
        run: |
          echo "üìä Queue Statistics:"
          python -m src.cloud_job_queue stats || echo "Failed to get stats"

          echo ""
          echo "üìÅ Translation outputs:"
          echo "  Passed: $(ls data/translated/*.json 2>/dev/null | wc -l) files"
          echo "  Flagged: $(ls data/flagged/*.json 2>/dev/null | wc -l) files"

      - name: Commit queue progress
        if: always()
        run: |
          set -e
          echo "üíæ Committing queue progress..."
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add data/cloud_jobs.json || true
          git add data/translated/*.json || true
          git add data/flagged/*.json || true
          if git diff --cached --quiet; then
            echo "No changes to commit"
            exit 0
          fi
          git commit -m "chore(batch): update translation queue progress [skip ci]" || true
          git pull --rebase origin main || true
          git push || echo "‚ö†Ô∏è Push failed (non-fatal)"

      - name: Upload flagged translations as artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: batch-artifacts-${{ github.run_id }}
          path: |
            reports/preflight_report.json
            reports/preflight_report.md
            reports/translation_report.json
            data/flagged/*.json
          if-no-files-found: ignore
          retention-days: 30
