name: Test Batch (No Inputs Workaround)

on:
  workflow_dispatch:
  push:
    paths:
      - '.github/workflows/test_batch_trigger.yml'

jobs:
  noop:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - name: Skip push events
        run: echo "Test batch workflow requires manual dispatch and secrets; skipping push."

  test-batch:
    if: github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest-8-cores
    timeout-minutes: 360
    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: true

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Validate API key
        env:
          OPENROUTER_API_KEY: ${{ secrets.OPENROUTER_API_KEY }}
        run: |
          set -e
          echo "üîé Validating OPENROUTER_API_KEY..."
          python -m src.tools.env_diagnose --validate || {
            echo "‚ùå API key invalid or missing"
            exit 1
          }

      - name: Pull latest cloud_jobs.json
        run: |
          set -e
          echo "üì• Pulling latest queue state..."
          git pull origin main --rebase || {
            echo "‚ö†Ô∏è Pull failed, continuing with local state"
          }

      - name: Run test batch (50 papers)
        env:
          OPENROUTER_API_KEY: ${{ secrets.OPENROUTER_API_KEY }}
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
        run: |
          set -e

          BATCH_SIZE="50"
          WORKERS="20"
          WORKER_ID="test-gh-${{ github.run_id }}"

          echo "üöÄ Starting TEST batch translation..."
          echo "  Batch size: $BATCH_SIZE"
          echo "  Workers: $WORKERS"
          echo "  Worker ID: $WORKER_ID"

          python -m src.pipeline \
            --cloud-mode \
            --with-qa \
            --batch-size "$BATCH_SIZE" \
            --workers "$WORKERS" \
            --worker-id "$WORKER_ID" \
            --skip-selection || {
            echo "‚ö†Ô∏è Translation batch completed with errors"
            exit 1
          }

          echo "‚úÖ Test batch complete"

      - name: Show QA statistics
        if: always()
        run: |
          echo "üìä Queue Statistics:"
          python -m src.cloud_job_queue stats || echo "Failed to get stats"

          echo ""
          echo "üìÅ Translation outputs:"
          echo "  Passed: $(ls data/translated/*.json 2>/dev/null | wc -l) files"
          echo "  Flagged: $(ls data/flagged/*.json 2>/dev/null | wc -l) files"

      - name: Commit queue progress
        if: always()
        run: |
          set -e

          echo "üíæ Committing test batch progress..."
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

          git add data/cloud_jobs.json || true
          git add data/translated/*.json || true
          git add data/flagged/*.json || true

          if git diff --cached --quiet; then
            echo "No changes to commit"
          else
            git commit -m "chore(test): test batch translation (50 papers) [skip ci]

Worker: test-gh-${{ github.run_id }}
Batch: 50 papers (test run)
Runner: ubuntu-latest-8-cores" || true

            for i in {1..5}; do
              if git pull --rebase origin main && git push; then
                echo "‚úÖ Progress committed and pushed"
                break
              else
                echo "‚ö†Ô∏è Push attempt $i failed, retrying..."
                sleep 5
              fi

              if [ $i -eq 5 ]; then
                echo "‚ùå Failed to push after 5 attempts"
                exit 1
              fi
            done
          fi

      - name: Upload flagged translations as artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-flagged-translations-${{ github.run_id }}
          path: data/flagged/*.json
          if-no-files-found: ignore
          retention-days: 30
