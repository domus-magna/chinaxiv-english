name: build-and-deploy

on:
  schedule:
    - cron: '0 3 * * *'
  workflow_dispatch:
    inputs:
      skip_harvest:
        description: 'Skip harvest and translation (rebuild only)'
        required: false
        default: 'false'
        type: boolean
  push:
    branches:
      - main

concurrency:
  # Separate concurrency groups for push runs that are internal [skip ci] updates
  # so those do not cancel an in-flight build-and-deploy run.
  group: build-and-deploy-${{ github.ref }}-${{ (github.event_name == 'push' && contains(github.event.head_commit.message || '', '[skip ci]')) && 'skip' || 'run' }}
  cancel-in-progress: true

jobs:
  build:
    # Avoid infinite loops when the workflow commits seen.json with [skip ci]
    if: ${{ github.event_name != 'push' || !contains(github.event.head_commit.message, '[skip ci]') }}
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: true
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: "Preflight: Validate OpenRouter API key"
        env:
          OPENROUTER_API_KEY: ${{ secrets.OPENROUTER_API_KEY }}
        run: |
          set -e
          echo "🔎 Preflight check: validating OPENROUTER_API_KEY"
          python -m src.tools.env_diagnose --check || true
          python -m src.tools.env_diagnose --validate || {
            echo "❌ OPENROUTER_API_KEY invalid or missing — failing early"
            exit 1
          }
      - name: Run tests (blocking on schedule/manual)
        if: ${{ github.event_name != 'push' }}
        run: pytest -q
      - name: Run tests (non-blocking on push)
        if: ${{ github.event_name == 'push' }}
        continue-on-error: true
        run: pytest -q
      - name: Build site
        env:
          OPENROUTER_API_KEY: ${{ secrets.OPENROUTER_API_KEY }}
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
          BRIGHTDATA_API_KEY: ${{ secrets.BRIGHTDATA_API_KEY }}
          BRIGHTDATA_ZONE: ${{ secrets.BRIGHTDATA_ZONE }}
        run: |
          set -e
          echo "🚀 Starting build process..."

          SKIP_HARVEST="${{ github.event.inputs.skip_harvest || 'false' }}"

          if [ "$SKIP_HARVEST" = "false" ]; then
            # Attempt ChinaXiv harvest via BrightData if credentials provided
            if [ -n "${BRIGHTDATA_API_KEY}" ] && [ -n "${BRIGHTDATA_ZONE}" ]; then
              echo "📥 Harvesting from ChinaXiv (BrightData)…"
              CURR=$(date -u +"%Y%m")
              PREV=$(date -u -d "-1 month" +"%Y%m")
              echo "   Current month: $CURR"
              echo "   Previous month: $PREV"
              python -m src.harvest_chinaxiv_optimized --month "$CURR" || echo "⚠️ Harvest current month failed; continuing"
              python -m src.harvest_chinaxiv_optimized --month "$PREV" || echo "⚠️ Harvest previous month failed; continuing"
            else
              echo "ℹ️ BrightData credentials not set; skipping harvest"
            fi
            echo "🔍 Preparing records for selection..."
            python .github/scripts/merge_current_prev_records.py

            echo "📋 Selecting new items (no limit)..."
            if [ -f data/records/_merged_current_prev.json ]; then
              python -m src.select_and_fetch --records data/records/_merged_current_prev.json --output data/selected.json || {
                echo "⚠️ Record selection failed, using empty selection";
                echo '[]' > data/selected.json;
              }
            else
              echo "⚠️ No records found to select";
              echo '[]' > data/selected.json;
            fi

            # Translate
            echo "🌐 Running translation pipeline..."
            python -m src.pipeline --skip-selection --workers 20 || {
              echo "⚠️ Translation failed, continuing with existing translations"
            }
          else
            echo "ℹ️ Skipping harvest and translation (rebuild only)"
          fi
          
          # Render site
          echo "🎨 Rendering site..."
          python -m src.render || {
            echo "❌ Site rendering failed"
            exit 1
          }
          
          echo "🔍 Building search index..."
          python -m src.search_index || {
            echo "❌ Search index failed"
            exit 1
          }
          
          echo "📄 Generating PDFs..."
          python -m src.make_pdf || {
            echo "⚠️ PDF generation failed, continuing without PDFs"
          }
          
          echo "✅ Build completed successfully!"
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      - name: Deploy to Cloudflare Pages
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CF_API_TOKEN }}
        run: |
          set -e
          echo "🚀 Deploying to Cloudflare Pages..."
          
          echo "📦 Installing Wrangler CLI..."
          npm install -g wrangler || {
            echo "❌ Failed to install Wrangler"
            exit 1
          }
          
          echo "🌐 Deploying site..."
          wrangler pages deploy site --project-name chinaxiv-english || {
            echo "❌ Deployment failed"
            exit 1
          }
          
          echo "✅ Deployment completed successfully!"
      - name: Persist dedupe state (seen.json)
        run: |
          set -e
          if [ ! -f data/seen.json ]; then
            echo "No seen.json to persist; skipping"
            exit 0
          fi
          echo "🔒 Persisting data/seen.json..."
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add data/seen.json || true
          if git diff --cached --quiet; then
            echo "No changes in seen.json"
          else
            git commit -m "chore(dedupe): update seen.json [skip ci]" || true
            git push || echo "⚠️ Push failed (non-fatal)"
          fi
